{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/OneContact/OneContact.module.css","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/OneContact/OneContact.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","contact","setContact","setName","number","setNumber","handleChange","e","target","className","styles","form","onSubmit","preventDefault","find","toLocaleLowerCase","alert","addContacts","label","input","type","pattern","title","onChange","required","btn","Filter","filterLabel","filterInput","changeFilter","Contact","onDelete","item","text","onClick","ContactList","list","map","id","deleteContact","onDeleteContact","ContactsView","s","container"],"mappings":"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","file":"static/js/3.5f49be74.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__11tWC\",\"label\":\"ContactForm_label__zqDT8\",\"btn\":\"ContactForm_btn__266w_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3dXpt\",\"filterLabel\":\"Filter_filterLabel__hQApt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2VFiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OneContact_item__2gTDz\",\"text\":\"OneContact_text__1Dcvf\",\"btn\":\"OneContact_btn__2wAqr\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state?.contacts?.items;\r\nexport const getFilter = state => state?.contacts?.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { addContacts } from '../../redux/contacts/operations';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const [contact, setContact] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      return alert(`${name} is already exist`);\r\n    } else dispatch(addContacts(name, number));\r\n    setContact(contact);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\nimport { changeFilter } from '../../redux/contacts/actions';\r\n\r\nconst Filter = () => {\r\n  const contacts = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={contacts}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styles from './OneContact.module.css';\r\n\r\nconst Contact = ({ name, number, onDelete }) => (\r\n  <div className={styles.item}>\r\n    <p className={styles.text}>\r\n      {name}:{number}\r\n    </p>\r\n    <button className={styles.btn} type=\"button\" onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import styles from './ContactList.module.css';\r\nimport Contact from '../OneContact/OneContact';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\r\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchContacts());\r\n  // }, [dispatch]);\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <Contact\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDeleteContact(id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import ContactForm from '../../components/ContactForm/ContactForm';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport s from './ContactsView.module.css';\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}