{"version":3,"sources":["redux/contacts/operations.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/contacts/actions.js","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","images/person-icon.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContacts","contacts","post","deleteContact","contactId","delete","id","token","headers","common","Authorization","register","credentials","Error","toast","type","theme","logIn","logOut","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","isRejectedWithValue","authOperations","module","exports","changeFilter","createAction","authSelector","getIsLoggedIn","isLoggedIn","getUserName","user","name","getFetchingCurrent","isFetchingCurrentUser","Navigation","useSelector","className","s","wrapper","to","exact","nav","UserMenu","dispatch","useDispatch","avatar","defaultIcon","src","alt","width","submit","onClick","AuthNav","AppBar","header","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","items","createReducer","fulfilled","payload","filter","contact","loading","pending","rejected","combineReducers","authSlice","createSlice","initialState","email","extraReducers","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.827983d7.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async (contacts, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contacts);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const {\r\n        data: { id },\r\n      } = await axios.delete(`/contacts/${contactId}`);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      toast('Fail creating User! Try again', {\r\n        type: 'warn',\r\n        theme: 'dark',\r\n      })\r\n    );\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(toast('Invalid email or password! Try again!'), {\r\n      type: 'warn',\r\n      theme: 'colored',\r\n    });\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    throw new Error(toast('Error!', { type: 'error', theme: 'colored' }));\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.isRejectedWithValue(5);\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('users/current');\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error(toast('Error!', { type: 'error', theme: 'dark' }));\r\n    }\r\n  }\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default authOperations;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserMenu_wrapper__3y8UZ\",\"avatar\":\"UserMenu_avatar__1BR8n\",\"name\":\"UserMenu_name__1j7Qb\",\"submit\":\"UserMenu_submit__1efY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3rUZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNav_nav__2kPY1\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1HYwu\"};","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\nconst getFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nexport const authSelector = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getFetchingCurrent,\r\n};\r\n\r\nexport default authSelector;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelector } from '../../redux/auth/auth-selectors';\r\nimport s from '../Navigation/Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  return (\r\n    <nav className={s.wrapper}>\r\n      <NavLink to=\"/\" exact className={s.nav}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink to=\"/contacts\" exact className={s.nav}>\r\n          Contact list\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/person-icon.6b51cdd8.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport defaultIcon from '../../images/person-icon.png';\r\nimport { authSelector } from '../../redux/auth/auth-selectors';\r\nimport s from '../UserMenu/UserMenu.module.css';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelector.getUserName);\r\n  const avatar = defaultIcon;\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n      <span className={s.name}>Welcome, {name}</span>\r\n      <button\r\n        type=\"button\"\r\n        className={s.submit}\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../AuthNav/AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/register\" exact className={s.nav}>\r\n        Registration\r\n      </NavLink>\r\n      <NavLink to=\"/login\" exact className={s.nav}>\r\n        Log in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelector } from '../../redux/auth/auth-selectors';\r\nimport s from '../AppBar/AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelector } from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelector } from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { Switch } from 'react-router';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { authSelector } from './redux/auth/auth-selectors';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelector.getFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <div>\r\n        <AppBar />\r\n        <Switch>\r\n          <Suspense fallback={<p>Loading...</p>}>\r\n            <PublicRoute exact path=\"/\">\r\n              <HomeView />\r\n            </PublicRoute>\r\n            <PublicRoute exact path=\"/register\" restricted redirectTo=\"/\">\r\n              <RegisterView />\r\n            </PublicRoute>\r\n            <PublicRoute exact path=\"/login\" restricted redirectTo=\"/contacts\">\r\n              <LoginView />\r\n            </PublicRoute>\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <ContactsView />\r\n            </PrivateRoute>\r\n          </Suspense>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './actions';\r\nimport { fetchContacts, addContacts, deleteContact } from './operations';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContacts.pending]: () => true,\r\n  [addContacts.fulfilled]: () => false,\r\n  [addContacts.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport reducer from './contacts/reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authSlice from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authSlice),\r\n    contacts: reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}